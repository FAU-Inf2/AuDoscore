{
    "vanilla": [
        {
            "exercises": [
                {
                    "name": "Lambda",
                    "tests": [
                        {
                            "desc": "PublicTest \"toTest__Stream_iterate_with_condition\": Should fail in \"vanilla\" because without @Replace.",
                            "error": "AssertionError(Should fail in \"vanilla\" because without @Replace. expected:<28> but was:<15>)",
                            "fromSecret": false,
                            "id": "pubTest__toTest__Stream_iterate_with_condition",
                            "success": false
                        },
                        {
                            "desc": "PublicTest \"toTest__List_of__Stream_dropWhile\": Should fail in \"vanilla\" because without @Replace.",
                            "error": "AssertionError(Should fail in \"vanilla\" because without @Replace. expected:<17> but was:<30>)",
                            "fromSecret": false,
                            "id": "pubTest__toTest__List_of__Stream_dropWhile",
                            "success": false
                        },
                        {
                            "desc": "PublicTest \"toTest__Set_of__Stream_filter\": Should fail in \"vanilla\" because without @Replace.",
                            "error": "AssertionError(Should fail in \"vanilla\" because without @Replace. expected:<28> but was:<15>)",
                            "fromSecret": false,
                            "id": "pubTest__toTest__Set_of__Stream_filter",
                            "success": false
                        },
                        {
                            "desc": "PublicTest \"toTest__List_of__Stream_takeWhile\": Should fail in \"vanilla\" because without @Replace.",
                            "error": "AssertionError(Should fail in \"vanilla\" because without @Replace. expected:<28> but was:<15>)",
                            "fromSecret": false,
                            "id": "pubTest__toTest__List_of__Stream_takeWhile",
                            "success": false
                        },
                        {
                            "desc": "PublicTest \"toTest__Map_of\": Should fail in \"vanilla\" because without @Replace.",
                            "error": "AssertionError(Should fail in \"vanilla\" because without @Replace. expected:<35> but was:<25>)",
                            "fromSecret": false,
                            "id": "pubTest__toTest__Map_of",
                            "success": false
                        }
                    ]
                }
            ]
        },
        {
            "exercises": [
                {
                    "name": "Lambda",
                    "tests": [
                        {
                            "desc": "SecretTest \"toTest__List_of__Stream_dropWhile\": Should pass in \"replaced\" because with @Replace now.",
                            "error": "AssertionError(Should pass in \"vanilla\" because without @Replace. expected:<17> but was:<30>)",
                            "fromSecret": true,
                            "id": "secTest__toTest__List_of__Stream_dropWhile",
                            "success": false
                        }
                    ]
                }
            ]
        },
        {
            "exercises": [
                {
                    "name": "Lambda",
                    "tests": [
                        {
                            "desc": "SecretTest \"toTest__List_of__Stream_takeWhile\": Should pass in \"replaced\" because with @Replace now.",
                            "error": "AssertionError(Should pass in \"replaced\" because with @Replace now. expected:<28> but was:<15>)",
                            "fromSecret": true,
                            "id": "secTest__toTest__List_of__Stream_takeWhile",
                            "success": false
                        }
                    ]
                }
            ]
        },
        {
            "exercises": [
                {
                    "name": "Lambda",
                    "tests": [
                        {
                            "desc": "SecretTest \"toTest__Map_of\": Should pass in \"vanilla\" because without @Replace.",
                            "error": "AssertionError(Should pass in \"vanilla\" because without @Replace. expected:<35> but was:<25>)",
                            "fromSecret": true,
                            "id": "secTest__toTest__Map_of",
                            "success": false
                        }
                    ]
                }
            ]
        },
        {
            "exercises": [
                {
                    "name": "Lambda",
                    "tests": [
                        {
                            "desc": "SecretTest \"toTest__Set_of__Stream_filter\": Should pass in \"replaced\" because with @Replace now.",
                            "error": "AssertionError(Should pass in \"replaced\" because with @Replace now. expected:<28> but was:<15>)",
                            "fromSecret": true,
                            "id": "secTest__toTest__Set_of__Stream_filter",
                            "success": false
                        }
                    ]
                }
            ]
        },
        {
            "exercises": [
                {
                    "name": "Lambda",
                    "tests": [
                        {
                            "desc": "SecretTest \"toTest__Stream_iterate_with_condition\": Should pass in \"vanilla\" because without @Replace.",
                            "error": "AssertionError(Should pass in \"vanilla\" because without @Replace. expected:<28> but was:<15>)",
                            "fromSecret": true,
                            "id": "secTest__toTest__Stream_iterate_with_condition",
                            "success": false
                        }
                    ]
                }
            ]
        }
    ],
    "replaced": [
        {
            "exercises": [
                {
                    "name": "Lambda",
                    "tests": [
                        {
                            "desc": "SecretTest \"toTest__List_of__Stream_dropWhile\": Should pass in \"replaced\" because with @Replace now.",
                            "fromSecret": true,
                            "id": "secTest__toTest__List_of__Stream_dropWhile",
                            "success": true
                        }
                    ]
                }
            ]
        },
        {
            "exercises": [
                {
                    "name": "Lambda",
                    "tests": [
                        {
                            "desc": "SecretTest \"toTest__List_of__Stream_takeWhile\": Should pass in \"replaced\" because with @Replace now.",
                            "fromSecret": true,
                            "id": "secTest__toTest__List_of__Stream_takeWhile",
                            "success": true
                        }
                    ]
                }
            ]
        },
        {
            "exercises": [
                {
                    "name": "Lambda",
                    "tests": [
                        {
                            "desc": "SecretTest \"toTest__Map_of\": Should pass in \"vanilla\" because without @Replace.",
                            "fromSecret": true,
                            "id": "secTest__toTest__Map_of",
                            "success": true
                        }
                    ]
                }
            ]
        },
        {
            "exercises": [
                {
                    "name": "Lambda",
                    "tests": [
                        {
                            "desc": "SecretTest \"toTest__Set_of__Stream_filter\": Should pass in \"replaced\" because with @Replace now.",
                            "fromSecret": true,
                            "id": "secTest__toTest__Set_of__Stream_filter",
                            "success": true
                        }
                    ]
                }
            ]
        },
        {
            "exercises": [
                {
                    "name": "Lambda",
                    "tests": [
                        {
                            "desc": "SecretTest \"toTest__Stream_iterate_with_condition\": Should pass in \"vanilla\" because without @Replace.",
                            "fromSecret": true,
                            "id": "secTest__toTest__Stream_iterate_with_condition",
                            "success": true
                        }
                    ]
                }
            ]
        }
    ]
}
